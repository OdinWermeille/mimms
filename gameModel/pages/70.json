{
  "props" : {
    "children" : [ {
      "props" : {
        "children" : [ {
          "props" : {
            "layoutStyle" : {
              "display" : "none"
            },
            "name" : "first loading",
            "style" : { },
            "text" : {
              "@class" : "Script",
              "content" : "import { refresh } from \"./dashboard/dashboardFacade\";\nrefresh(true);\n'';",
              "language" : "TypeScript"
            }
          },
          "type" : "Text"
        }, {
          "props" : {
            "children" : [ {
              "props" : {
                "className" : "reload header-button",
                "icon" : "redo",
                "label" : {
                  "@class" : "Script",
                  "content" : "import { getTranslation } from \"./tools/translation\";\ngetTranslation('mainSim-dashboard', 'update')",
                  "language" : "TypeScript"
                },
                "layoutClassName" : "reload-container",
                "layoutStyle" : {
                  "top" : "-5px",
                  "z-index" : "100"
                },
                "localScriptEval" : {
                  "script" : {
                    "@class" : "ClientScript",
                    "content" : "import { refresh } from \"./dashboard/dashboardFacade\";\nrefresh(false);",
                    "language" : "TypeScript",
                    "returnType" : "Promise<unknown> | undefined"
                  }
                },
                "name" : "update",
                "style" : { }
              },
              "type" : "Button"
            }, {
              "props" : {
                "children" : [ {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "conditionnalClassNames" : [ {
                                  "applyOn" : "Inside",
                                  "className" : "redLegendN",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"AmbulanceEvacs\"||\nContext.category.name === \"HelicopterEvacs\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "greenLegendN",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"AmbulanceArrivals\"||\nContext.category.name === \"HelicopterArrivals\"||\nContext.category.name === \"SmurArrivals\";",
                                    "language" : "typescript"
                                  }
                                } ],
                                "hideIf" : {
                                  "@class" : "Script",
                                  "content" : "!(Context.category.name === \"AmbulanceEvacs\" || Context.category.name === \"HelicopterEvacs\" || Context.category.name === \"AmbulanceArrivals\" || Context.category.name === \"HelicopterArrivals\" || Context.category.name === \"SmurArrivals\");",
                                  "language" : "typescript"
                                },
                                "layoutStyle" : {
                                  "padding" : "0"
                                },
                                "style" : { },
                                "text" : {
                                  "@class" : "Script",
                                  "content" : "\"n\"",
                                  "language" : "TypeScript"
                                }
                              },
                              "type" : "Text"
                            }, {
                              "props" : {
                                "className" : "legendIcon evac",
                                "hideIf" : {
                                  "@class" : "Script",
                                  "content" : "Context.category.name !== \"AmbulanceEvacs\"&&\nContext.category.name !== \"AmbulanceArrivals\";",
                                  "language" : "typescript"
                                },
                                "layoutClassName" : "",
                                "layoutStyle" : {
                                  "padding" : "0"
                                },
                                "name" : "Ambulance",
                                "script" : {
                                  "@class" : "Script",
                                  "content" : "\"/pictosDashboard/Ambulance-Odin_Wermeille.png\"",
                                  "language" : "TypeScript"
                                },
                                "style" : { }
                              },
                              "type" : "Image"
                            }, {
                              "props" : {
                                "className" : "legendIcon evac",
                                "hideIf" : {
                                  "@class" : "Script",
                                  "content" : "Context.category.name !== \"HelicopterEvacs\"&&\nContext.category.name !== \"HelicopterArrivals\";",
                                  "language" : "typescript"
                                },
                                "layoutStyle" : {
                                  "padding" : "0"
                                },
                                "name" : "Helicopter",
                                "script" : {
                                  "@class" : "Script",
                                  "content" : "\"/pictosDashboard/Helicopter-cynthia-gc.png\"",
                                  "language" : "TypeScript"
                                },
                                "style" : { }
                              },
                              "type" : "Image"
                            }, {
                              "props" : {
                                "className" : "legendIcon evac",
                                "hideIf" : {
                                  "@class" : "Script",
                                  "content" : "Context.category.name !== \"SmurArrivals\";",
                                  "language" : "typescript"
                                },
                                "layoutStyle" : {
                                  "padding" : "0"
                                },
                                "name" : "SMUR",
                                "script" : {
                                  "@class" : "Script",
                                  "content" : "\"/pictosDashboard/Car-Andriy_Makukha.png\"",
                                  "language" : "TypeScript"
                                },
                                "style" : { }
                              },
                              "type" : "Image"
                            }, {
                              "props" : {
                                "children" : [ ],
                                "className" : "legendSquare",
                                "conditionnalClassNames" : [ {
                                  "applyOn" : "Inside",
                                  "className" : "METHANE",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"METHANE\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "OpenComms",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"OpenComms\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "SentMessages",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"SentMessages\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "ReceivedMessages",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"ReceivedMessages\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "Situation",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"Situation\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "PlayerMoves",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"PlayerMoves\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "WaitingOrders",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"WaitingOrders\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "PretriageOrders",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"PretriageOrders\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "PorterOrders",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"PorterOrders\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "LeadPMARole",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"LeadPMARole\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "EVASANRole",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"EVASANRole\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "PcFrontPost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"PcFrontPost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "NestPost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"NestPost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "AmbulancePost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"AmbulancePost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "HelicopterPost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"HelicopterPost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "AccregPost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"AccregPost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "PMAPost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"PMAPost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "PCPost",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"PCPost\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "AcsMscArrivalAnnouncement",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"AcsMscArrivalAnnouncement\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "EvasanArrivalAnnouncement",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"EvasanArrivalAnnouncement\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "LeadpmaArrivalAnnouncement",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name === \"LeadpmaArrivalAnnouncement\";",
                                    "language" : "typescript"
                                  }
                                }, {
                                  "applyOn" : "Inside",
                                  "className" : "outlined",
                                  "condition" : {
                                    "@class" : "Script",
                                    "content" : "Context.category.name !== \"AmbulanceEvacs\" && Context.category.name !== \"HelicopterEvacs\" && Context.category.name !== \"AmbulanceArrivals\" && Context.category.name !== \"HelicopterArrivals\" && Context.category.name !== \"SmurArrivals\";",
                                    "language" : "typescript"
                                  }
                                } ],
                                "layout" : { },
                                "layoutStyle" : {
                                  "padding" : "0 5px 0 15px"
                                },
                                "name" : "Color",
                                "style" : { }
                              },
                              "type" : "FlexList"
                            }, {
                              "props" : {
                                "layoutStyle" : {
                                  "padding" : "0"
                                },
                                "name" : "Legend",
                                "style" : { },
                                "text" : {
                                  "@class" : "Script",
                                  "content" : "Context.category.name",
                                  "language" : "TypeScript"
                                }
                              },
                              "type" : "Text"
                            } ],
                            "layout" : { },
                            "layoutStyle" : { },
                            "style" : { }
                          },
                          "type" : "FlexList"
                        } ],
                        "exposeAs" : "category",
                        "getItemsFn" : {
                          "@class" : "Script",
                          "content" : "import { getCategories } from \"./statistics/legendGen\";\nconst categories = getCategories(Context.interface.state.categories);\ncategories;",
                          "language" : "TypeScript"
                        },
                        "itemKey" : "name",
                        "layout" : { },
                        "layoutStyle" : {
                          "width" : "80%"
                        },
                        "name" : "categoryForLegend",
                        "style" : {
                          "flex-wrap" : "wrap"
                        }
                      },
                      "type" : "For each"
                    }, {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "className" : "removeStyle clickable",
                            "label" : {
                              "@class" : "Script",
                              "content" : "Context.interface.state.filtersUnfolded ? \"Affichage▴\" : \"Affichage▾\";",
                              "language" : "TypeScript"
                            },
                            "layoutClassName" : "clickable",
                            "layoutStyle" : {
                              "padding" : "0"
                            },
                            "localScriptEval" : {
                              "script" : {
                                "@class" : "ClientScript",
                                "content" : "Context.interface.setState(previousState => (\n  { ...previousState, filtersUnfolded : !previousState.filtersUnfolded }\n))",
                                "language" : "TypeScript"
                              }
                            },
                            "name" : "toggleFilters",
                            "style" : { }
                          },
                          "type" : "Button"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "className" : "removeStyle",
                                "label" : {
                                  "@class" : "Script",
                                  "content" : "const categoryName : string = Context.category.name;\n`${categoryName} ${Context.interface.state.categories[categoryName] ? \"✓\" : \"\"}`;",
                                  "language" : "TypeScript"
                                },
                                "layoutStyle" : { },
                                "localScriptEval" : {
                                  "script" : {
                                    "@class" : "ClientScript",
                                    "content" : "Context.interface.setState(previousState => (\n  { ...previousState, categories : {\n      ...previousState.categories,\n      [Context.category.name] : !previousState.categories[Context.category.name]\n    } \n  }\n))",
                                    "language" : "TypeScript"
                                  }
                                },
                                "name" : "toggleCategory",
                                "style" : {
                                  "align-items" : "end",
                                  "height" : "30px",
                                  "margin" : "0"
                                }
                              },
                              "type" : "Button"
                            } ],
                            "className" : "overlay",
                            "exposeAs" : "category",
                            "getItemsFn" : {
                              "@class" : "Script",
                              "content" : "const categories = Context.interface.state.categories;\nObject.entries(categories).map(([name, isActive]) => ({ name, isActive }));",
                              "language" : "TypeScript"
                            },
                            "hideIf" : {
                              "@class" : "Script",
                              "content" : "!Context.interface.state.filtersUnfolded;",
                              "language" : "typescript"
                            },
                            "itemKey" : "name",
                            "layout" : {
                              "flexDirection" : "column"
                            },
                            "layoutStyle" : {
                              "padding" : "0"
                            },
                            "name" : "categoryForFilters",
                            "style" : {
                              "white-space" : "nowrap",
                              "width" : "13em"
                            }
                          },
                          "type" : "For each"
                        } ],
                        "className" : "",
                        "layout" : {
                          "flexDirection" : "column"
                        },
                        "layoutStyle" : {
                          "width" : "20%"
                        },
                        "name" : "Positioner",
                        "style" : {
                          "left" : "20%",
                          "position" : "absolute",
                          "z-index" : "99"
                        }
                      },
                      "type" : "FlexList"
                    } ],
                    "layout" : {
                      "flexDirection" : "row"
                    },
                    "layoutStyle" : {
                      "width" : "75%"
                    },
                    "name" : "Legend",
                    "style" : { }
                  },
                  "type" : "FlexList"
                }, {
                  "props" : {
                    "className" : "alignRight",
                    "hideIf" : {
                      "@class" : "Script",
                      "content" : "false;",
                      "language" : "typescript"
                    },
                    "layoutStyle" : {
                      "padding" : "0",
                      "width" : "calc(72vw - 30px)"
                    },
                    "name" : "Skull",
                    "script" : {
                      "@class" : "Script",
                      "content" : "\"/pictosDashboard/Skull-OpenClipart-Vectors.png\"",
                      "language" : "TypeScript"
                    },
                    "style" : {
                      "height" : "auto",
                      "position" : "relative",
                      "width" : "20px"
                    }
                  },
                  "type" : "Image"
                }, {
                  "props" : {
                    "children" : [ {
                      "props" : {
                        "children" : [ {
                          "props" : {
                            "className" : "alignLeft removeStyle clickable",
                            "label" : {
                              "@class" : "Script",
                              "content" : "Context.interface.state.teamsUnfolded[Context.team.id] ? Context.team.name +  \"▴\" : Context.team.name +  \"▾\";",
                              "language" : "TypeScript"
                            },
                            "layoutClassName" : "",
                            "layoutStyle" : { },
                            "localScriptEval" : {
                              "script" : {
                                "@class" : "ClientScript",
                                "content" : "Context.interface.setState(previousState => (\n  {...previousState, teamsUnfolded: {\n    ...previousState.teamsUnfolded,\n    [Context.team.id]: !previousState.teamsUnfolded[Context.team.id],\n  },\n}));",
                                "language" : "TypeScript"
                              }
                            },
                            "name" : "Team name",
                            "style" : {
                              "font-weight" : "bold",
                              "position" : "absolute"
                            }
                          },
                          "type" : "Button"
                        }, {
                          "props" : {
                            "layoutClassName" : "alignRight",
                            "layoutStyle" : {
                              "position" : "absolute"
                            },
                            "name" : "Mortality rate",
                            "style" : {
                              "font-size" : "1.5em"
                            },
                            "text" : {
                              "@class" : "Script",
                              "content" : "// import { getTargetExecutionContext } from \"./game/gameExecutionContextController\";\nimport { countDeadPatients, countPatients, getMortalityRate } from \"./statistics/helpers\";\n// wlog(\"Processed events :\", getTargetExecutionContext(Context.team.id)?.getLocalEventManager().getProcessedEvents());\ncountDeadPatients(Context.team.state) + \"/\" + countPatients(Context.team.state) + \" (\" + getMortalityRate(Context.team.state) + \"%)\";",
                              "language" : "TypeScript"
                            }
                          },
                          "type" : "Text"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "children" : [ ],
                                "className" : "",
                                "layout" : { },
                                "layoutClassName" : "hline",
                                "layoutStyle" : { },
                                "name" : "Horizontal line",
                                "style" : { }
                              },
                              "type" : "FlexList"
                            }, {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "children" : [ {
                                          "props" : {
                                            "children" : [ {
                                              "props" : {
                                                "children" : [ {
                                                  "props" : {
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\nContext.time.minute + Context.minuteIncrease.add !== Context.interface.state.overlayShown.minute ||\nContext.team.id !== Context.interface.state.overlayShown.teamId || \"All\" !== Context.interface.state.overlayShown.role ||\n  !getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state).length;",
                                                      "language" : "typescript"
                                                    },
                                                    "layoutClassName" : "",
                                                    "layoutStyle" : {
                                                      "font-size" : "30px",
                                                      "left" : "70px",
                                                      "position" : "absolute",
                                                      "z-index" : "100"
                                                    },
                                                    "name" : "Close",
                                                    "style" : { },
                                                    "text" : {
                                                      "@class" : "Script",
                                                      "content" : "\"<p>⨯</p>\"",
                                                      "language" : "TypeScript"
                                                    }
                                                  },
                                                  "type" : "Text"
                                                }, {
                                                  "props" : {
                                                    "className" : "",
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\nContext.time.minute + Context.minuteIncrease.add !== Context.interface.state.overlayShown.minute ||\nContext.team.id !== Context.interface.state.overlayShown.teamId || \"All\" !== Context.interface.state.overlayShown.role ||\n  !getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state).length;",
                                                      "language" : "typescript"
                                                    },
                                                    "layoutClassName" : "overlay center",
                                                    "layoutStyle" : {
                                                      "position" : "absolute",
                                                      "top" : "25px"
                                                    },
                                                    "name" : "Minute overlay",
                                                    "style" : { },
                                                    "text" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\n`<pre class=\"keepFont\">` + getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state) + `</pre>`;",
                                                      "language" : "TypeScript"
                                                    }
                                                  },
                                                  "type" : "Text"
                                                } ],
                                                "className" : "clickable",
                                                "hideIf" : {
                                                  "@class" : "Script",
                                                  "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\n!getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state).length;",
                                                  "language" : "typescript"
                                                },
                                                "layout" : { },
                                                "layoutClassName" : "clickable",
                                                "layoutStyle" : {
                                                  "height" : "18px",
                                                  "padding" : "0",
                                                  "position" : "absolute",
                                                  "width" : "12px"
                                                },
                                                "localScriptEval" : {
                                                  "script" : {
                                                    "@class" : "ClientScript",
                                                    "content" : "const currentMinute = Context.time.minute + Context.minuteIncrease.add;\nContext.interface.setState(previousState => (\n  previousState.overlayShown.minute !== currentMinute || previousState.overlayShown.teamId !== Context.team.id || previousState.overlayShown.role !== \"All\" ?\n  { ...previousState, overlayShown: { minute: (currentMinute), teamId: Context.team.id, role: \"All\" } }\n  : { ...previousState, overlayShown: { minute: -1, teamId: -1, role: \"\" } }\n))",
                                                    "language" : "TypeScript"
                                                  }
                                                },
                                                "name" : "Clickable area",
                                                "style" : { }
                                              },
                                              "type" : "FlexList"
                                            }, {
                                              "props" : {
                                                "children" : [ {
                                                  "props" : {
                                                    "children" : [ {
                                                      "props" : {
                                                        "children" : [ ],
                                                        "className" : "evacArrivalLine",
                                                        "layout" : { },
                                                        "layoutClassName" : "",
                                                        "layoutStyle" : {
                                                          "padding" : "0"
                                                        },
                                                        "name" : "Evac Arrival line",
                                                        "style" : { }
                                                      },
                                                      "type" : "FlexList"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evacArrNbr",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrHelicopterArrs;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "evacArrNbrContainer",
                                                        "layoutStyle" : { },
                                                        "name" : "Nbr Helicopter Arrivals",
                                                        "style" : {
                                                          "color" : "green"
                                                        },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrHelicopterArrs);",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evacArrNbr",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "!Context.interface.state.categories.Evacs||\n!Context.nbrEvacsArrs.state.nbrHelicopterEvacs;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "evacArrNbrContainer",
                                                        "layoutStyle" : {
                                                          "margin-right" : "-2px",
                                                          "padding" : "0 0 0 2px"
                                                        },
                                                        "name" : "Nbr Helicopter Evacs",
                                                        "style" : {
                                                          "color" : "red"
                                                        },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrHelicopterEvacs);",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evac",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "(!Context.interface.state.categories.VehicleArrivals || !Context.nbrEvacsArrs.state.nbrHelicopterArrs) && (!Context.interface.state.categories.Evacs || !Context.nbrEvacsArrs.state.nbrHelicopterEvacs);",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutStyle" : { },
                                                        "name" : "Helicopter icon",
                                                        "script" : {
                                                          "@class" : "Script",
                                                          "content" : "\"/pictosDashboard/Helicopter-cynthia-gc.png\"",
                                                          "language" : "TypeScript"
                                                        },
                                                        "style" : { }
                                                      },
                                                      "type" : "Image"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evacArrNbr",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrAmbulanceArrs;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "evacArrNbrContainer",
                                                        "layoutStyle" : { },
                                                        "name" : "Nbr Ambulance Arrivals",
                                                        "style" : {
                                                          "color" : "green"
                                                        },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrAmbulanceArrs);",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evacArrNbr",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "!Context.interface.state.categories.Evacs||\n!Context.nbrEvacsArrs.state.nbrAmbulanceEvacs;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "evacArrNbrContainer",
                                                        "layoutStyle" : { },
                                                        "name" : "Nbr Ambulance Evacs",
                                                        "style" : {
                                                          "color" : "red"
                                                        },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs);",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evac",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "(!Context.interface.state.categories.VehicleArrivals || !Context.nbrEvacsArrs.state.nbrAmbulanceArrs) && (!Context.interface.state.categories.Evacs || !Context.nbrEvacsArrs.state.nbrAmbulanceEvacs);",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutStyle" : { },
                                                        "name" : "Ambulance icon",
                                                        "script" : {
                                                          "@class" : "Script",
                                                          "content" : "\"/pictosDashboard/Ambulance-Odin_Wermeille.png\"",
                                                          "language" : "TypeScript"
                                                        },
                                                        "style" : { }
                                                      },
                                                      "type" : "Image"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evacArrNbr",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrSmurArrs;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "evacArrNbrContainer",
                                                        "layoutStyle" : { },
                                                        "name" : "Nbr SMUR Arrivals",
                                                        "style" : {
                                                          "color" : "green"
                                                        },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrSmurArrs);",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    }, {
                                                      "props" : {
                                                        "className" : "evac",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrSmurArrs;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutStyle" : { },
                                                        "name" : "SMUR icon",
                                                        "script" : {
                                                          "@class" : "Script",
                                                          "content" : "\"/pictosDashboard/Car-Andriy_Makukha.png\"",
                                                          "language" : "TypeScript"
                                                        },
                                                        "style" : { }
                                                      },
                                                      "type" : "Image"
                                                    } ],
                                                    "conditionnalClassNames" : [ {
                                                      "applyOn" : "Outside",
                                                      "className" : "oneVehicleType",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "(Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs || Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs || Context.nbrEvacsArrs.state.nbrHelicopterArrs)) + Number(!!Context.nbrEvacsArrs.state.nbrSmurArrs)) === 1;",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Outside",
                                                      "className" : "twoVehicleTypes",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "(Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs || Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs || Context.nbrEvacsArrs.state.nbrHelicopterArrs)) + Number(!!Context.nbrEvacsArrs.state.nbrSmurArrs)) === 2;",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Outside",
                                                      "className" : "threeVehicleTypes",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "(Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs || Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs || Context.nbrEvacsArrs.state.nbrHelicopterArrs)) + Number(!!Context.nbrEvacsArrs.state.nbrSmurArrs)) === 3;",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Outside",
                                                      "className" : "oneRepeat",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs && Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs && Context.nbrEvacsArrs.state.nbrHelicopterArrs)) === 1;",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Outside",
                                                      "className" : "twoRepeats",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs && Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs && Context.nbrEvacsArrs.state.nbrHelicopterArrs)) === 2;",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Outside",
                                                      "className" : "upper",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "!((Context.time.minute + Context.minuteIncrease.add) % 2);",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Outside",
                                                      "className" : "lower",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "!!((Context.time.minute + Context.minuteIncrease.add) % 2);",
                                                        "language" : "typescript"
                                                      }
                                                    } ],
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "(!Context.nbrEvacsArrs.state.nbrEvacs || !Context.interface.state.categories.Evacs) && (!Context.nbrEvacsArrs.state.nbrArrs || !Context.interface.state.categories.VehicleArrivals);",
                                                      "language" : "typescript"
                                                    },
                                                    "layout" : { },
                                                    "layoutClassName" : "evacArrivalContainer",
                                                    "layoutStyle" : {
                                                      "padding" : "0"
                                                    },
                                                    "name" : "Evac Arrival container",
                                                    "style" : {
                                                      "position" : "absolute"
                                                    }
                                                  },
                                                  "type" : "FlexList"
                                                } ],
                                                "exposeAs" : "nbrEvacsArrs",
                                                "hideIf" : {
                                                  "@class" : "Script",
                                                  "content" : "!Context.interface.state.categories.Evacs&&\n!Context.interface.state.categories.VehicleArrivals;",
                                                  "language" : "typescript"
                                                },
                                                "id" : "",
                                                "initialState" : {
                                                  "@class" : "Script",
                                                  "content" : "import { MainStateObject } from \"./game/common/simulationState/mainSimulationState\";\nimport { getCategorisedEvents, MainCategory } from \"./statistics/helpers\";\nconst categoriesEvacsArrOnly: { [Key in MainCategory]: boolean } = Object.fromEntries((Object.keys(Context.interface.state.categories) as MainCategory[]).map(key => [key, key === \"Evacs\" || key === \"VehicleArrivals\"])) as Record<MainCategory, boolean>;\nconst teamState: MainStateObject = Context.team.state;\nconst evacsArrEvents = getCategorisedEvents(teamState, categoriesEvacsArrOnly);\n\nconst minuteEvacsArrs = evacsArrEvents.map(evacArrList => {\n  return { category: evacArrList.category, evacsArrs: evacArrList.events.filter(evacArr => evacArr.startTime === Context.time.minute + Context.minuteIncrease.add) };\n}).filter(evacsArrs => evacsArrs.evacsArrs.length);\n\nlet nbrAmbulanceEvacs = 0;\nlet nbrHelicopterEvacs = 0;\nlet nbrAmbulanceArrs = 0;\nlet nbrHelicopterArrs = 0;\nlet nbrSmurArrs = 0;\nminuteEvacsArrs.forEach(evacsArrs => {\n  nbrAmbulanceEvacs += evacsArrs.category === \"AmbulanceEvacs\" ? evacsArrs.evacsArrs.length : 0;\n  nbrHelicopterEvacs += evacsArrs.category === \"HelicopterEvacs\" ? evacsArrs.evacsArrs.length : 0;\n  nbrAmbulanceArrs += evacsArrs.category === \"AmbulanceArrivals\" ? evacsArrs.evacsArrs.length : 0;\n  nbrHelicopterArrs += evacsArrs.category === \"HelicopterArrivals\" ? evacsArrs.evacsArrs.length : 0;\n  nbrSmurArrs += evacsArrs.category === \"SmurArrivals\" ? evacsArrs.evacsArrs.length : 0;\n})\nconst nbrEvacs = nbrAmbulanceEvacs + nbrHelicopterEvacs;\nconst nbrArrs = nbrAmbulanceArrs + nbrHelicopterArrs + nbrSmurArrs;\nconst evacsData = {\n  nbrEvacs,\n  nbrArrs,\n  nbrAmbulanceEvacs,\n  nbrHelicopterEvacs,\n  nbrAmbulanceArrs,\n  nbrHelicopterArrs,\n  nbrSmurArrs,\n};\nevacsData;",
                                                  "language" : "TypeScript"
                                                },
                                                "layoutStyle" : {
                                                  "padding" : "0"
                                                },
                                                "localState" : true,
                                                "name" : "Evacs and Arrivals",
                                                "style" : { }
                                              },
                                              "type" : "State"
                                            }, {
                                              "props" : {
                                                "className" : "",
                                                "layoutStyle" : {
                                                  "padding" : "0"
                                                },
                                                "name" : "Minute display",
                                                "style" : { },
                                                "text" : {
                                                  "@class" : "Script",
                                                  "content" : "import { createMinuteSquare } from \"./statistics/simpleGapMaker\";\ncreateMinuteSquare(Context.time, Context.minuteIncrease.add, Context.team.state, Context.interface.state);",
                                                  "language" : "TypeScript"
                                                }
                                              },
                                              "type" : "Text"
                                            } ],
                                            "hideIf" : {
                                              "@class" : "Script",
                                              "content" : "Context.time.lastMinute < (Context.time.minute + Context.minuteIncrease.add);",
                                              "language" : "typescript"
                                            },
                                            "layout" : { },
                                            "layoutStyle" : {
                                              "padding" : "0"
                                            },
                                            "style" : { }
                                          },
                                          "type" : "FlexList"
                                        } ],
                                        "className" : "minutesContainer",
                                        "exposeAs" : "minuteIncrease",
                                        "getItemsFn" : {
                                          "@class" : "Script",
                                          "content" : "[{add : 0}, {add : 1}, {add : 2}, {add : 3}, {add : 4}]",
                                          "language" : "TypeScript"
                                        },
                                        "hideIf" : {
                                          "@class" : "Script",
                                          "content" : "false;",
                                          "language" : "typescript"
                                        },
                                        "itemKey" : "add",
                                        "layout" : { },
                                        "layoutClassName" : "",
                                        "layoutStyle" : {
                                          "padding" : "0px",
                                          "width" : "100%"
                                        },
                                        "name" : "oneMinute",
                                        "style" : {
                                          "padding" : "0px",
                                          "width" : "100%"
                                        }
                                      },
                                      "type" : "For each"
                                    }, {
                                      "props" : {
                                        "children" : [ {
                                          "props" : {
                                            "children" : [ {
                                              "props" : {
                                                "children" : [ ],
                                                "className" : "vline",
                                                "conditionnalClassNames" : [ {
                                                  "applyOn" : "Inside",
                                                  "className" : "last",
                                                  "condition" : {
                                                    "@class" : "Script",
                                                    "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { isLastTimeline } from \"./statistics/analysisDashboard\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\n \n  const teams : { id : number, name : string }[] = []\n  getTeamsContext().forEach(team => {\n  const state = getTeamState(team.id);\n  state && teams.push(team);\n});\nisLastTimeline(teams, Context.team.id, Context.interface.state.teamsUnfolded);",
                                                    "language" : "typescript"
                                                  }
                                                }, {
                                                  "applyOn" : "Inside",
                                                  "className" : "endOfNotLastTeam",
                                                  "condition" : {
                                                    "@class" : "Script",
                                                    "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { isLastTimelineInNotLastTeam } from \"./statistics/analysisDashboard\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\nconst teams : { id : number, name : string }[] = []\ngetTeamsContext().forEach(team => {\n  const state = getTeamState(team.id);\n  state && teams.push(team);\n});\nisLastTimelineInNotLastTeam(teams, Context.team.id, Context.interface.state.teamsUnfolded);",
                                                    "language" : "typescript"
                                                  }
                                                } ],
                                                "layout" : {
                                                  "flexDirection" : "column"
                                                },
                                                "layoutStyle" : {
                                                  "padding" : "11.5px 20.5px 5px"
                                                },
                                                "name" : "Vertical line",
                                                "style" : { }
                                              },
                                              "type" : "FlexList"
                                            }, {
                                              "props" : {
                                                "hideIf" : {
                                                  "@class" : "Script",
                                                  "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { isLastTimeline } from \"./statistics/analysisDashboard\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\n  const teams : { id : number, name : string }[] = []\n  getTeamsContext().forEach(team => {\n  const state = getTeamState(team.id);\n  state && teams.push(team);\n});\n!isLastTimeline(teams, Context.team.id, Context.interface.state.teamsUnfolded);",
                                                  "language" : "typescript"
                                                },
                                                "layoutStyle" : {
                                                  "margin-top" : "35px",
                                                  "padding" : "0px"
                                                },
                                                "name" : "Time",
                                                "style" : { },
                                                "text" : {
                                                  "@class" : "Script",
                                                  "content" : "JSON.stringify(Context.time.minute) + \"'\"",
                                                  "language" : "TypeScript"
                                                }
                                              },
                                              "type" : "Text"
                                            } ],
                                            "className" : "",
                                            "layout" : {
                                              "alignItems" : "center",
                                              "flexDirection" : "column",
                                              "justifyContent" : "space-between"
                                            },
                                            "layoutStyle" : {
                                              "padding" : "0px"
                                            },
                                            "name" : "Positioner",
                                            "style" : {
                                              "margin-left" : "-19px",
                                              "margin-right" : "-30px",
                                              "padding" : "0px",
                                              "width" : "100%"
                                            }
                                          },
                                          "type" : "FlexList"
                                        } ],
                                        "layout" : { },
                                        "layoutStyle" : {
                                          "padding" : "0px"
                                        },
                                        "name" : "Vertical line container",
                                        "style" : {
                                          "padding" : "0px"
                                        }
                                      },
                                      "type" : "FlexList"
                                    } ],
                                    "className" : "",
                                    "layout" : {
                                      "flexDirection" : "column"
                                    },
                                    "layoutClassName" : "",
                                    "layoutStyle" : {
                                      "padding" : "0px"
                                    },
                                    "style" : {
                                      "padding" : "0px"
                                    }
                                  },
                                  "type" : "FlexList"
                                } ],
                                "className" : "stayIn",
                                "exposeAs" : "time",
                                "getItemsFn" : {
                                  "@class" : "Script",
                                  "content" : "import { MainStateObject } from \"./game/common/simulationState/mainSimulationState\";\nimport { getTimeArray } from \"./statistics/helpers\";\nconst teamsData : MainStateObject[] = Object.values(Context.state.state);\nconst timeArray = getTimeArray(Object.values(teamsData));\ntimeArray;",
                                  "language" : "TypeScript"
                                },
                                "itemKey" : "minute",
                                "layout" : { },
                                "layoutStyle" : {
                                  "margin" : "-18px auto",
                                  "padding" : "0px",
                                  "width" : "100%"
                                },
                                "name" : "fiveMins",
                                "style" : {
                                  "justify-content" : "space-between"
                                }
                              },
                              "type" : "For each"
                            } ],
                            "className" : "stayIn",
                            "hideIf" : {
                              "@class" : "Script",
                              "content" : "false;",
                              "language" : "typescript"
                            },
                            "id" : "",
                            "layout" : {
                              "flexDirection" : "column"
                            },
                            "layoutClassName" : "stayIn",
                            "layoutStyle" : {
                              "padding" : "0"
                            },
                            "style" : { }
                          },
                          "type" : "FlexList"
                        }, {
                          "props" : {
                            "children" : [ {
                              "props" : {
                                "children" : [ {
                                  "props" : {
                                    "className" : "alignLeft",
                                    "layoutStyle" : { },
                                    "name" : "Role",
                                    "style" : {
                                      "position" : "absolute"
                                    },
                                    "text" : {
                                      "@class" : "Script",
                                      "content" : "Context.role.role",
                                      "language" : "TypeScript"
                                    }
                                  },
                                  "type" : "Text"
                                }, {
                                  "props" : {
                                    "children" : [ ],
                                    "className" : "",
                                    "layout" : { },
                                    "layoutClassName" : "hline",
                                    "layoutStyle" : { },
                                    "name" : "Horizontal line",
                                    "style" : { }
                                  },
                                  "type" : "FlexList"
                                }, {
                                  "props" : {
                                    "children" : [ {
                                      "props" : {
                                        "children" : [ {
                                          "props" : {
                                            "children" : [ {
                                              "props" : {
                                                "children" : [ {
                                                  "props" : {
                                                    "children" : [ {
                                                      "props" : {
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\nContext.time.minute + Context.minuteIncrease.add !== Context.interface.state.overlayShown.minute ||\nContext.team.id !== Context.interface.state.overlayShown.teamId || Context.role.role !== Context.interface.state.overlayShown.role ||\n!getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state, Context.role.role).length;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "",
                                                        "layoutStyle" : {
                                                          "font-size" : "30px",
                                                          "left" : "70px",
                                                          "position" : "absolute",
                                                          "z-index" : "100"
                                                        },
                                                        "name" : "Close",
                                                        "style" : { },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "\"<p>⨯</p>\"",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    }, {
                                                      "props" : {
                                                        "className" : "",
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\nContext.time.minute + Context.minuteIncrease.add !== Context.interface.state.overlayShown.minute ||\nContext.team.id !== Context.interface.state.overlayShown.teamId || Context.role.role !== Context.interface.state.overlayShown.role ||\n  !getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state, Context.role.role).length;",
                                                          "language" : "typescript"
                                                        },
                                                        "layoutClassName" : "overlay center",
                                                        "layoutStyle" : {
                                                          "position" : "absolute",
                                                          "top" : "25px"
                                                        },
                                                        "name" : "Minute overlay",
                                                        "style" : { },
                                                        "text" : {
                                                          "@class" : "Script",
                                                          "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\n`<pre class=\"keepFont\">` + getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state, Context.role.role) + `</pre>`;",
                                                          "language" : "TypeScript"
                                                        }
                                                      },
                                                      "type" : "Text"
                                                    } ],
                                                    "className" : "clickable",
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getMinuteBubbleContent } from \"./statistics/simpleGapMaker\";\n!getMinuteBubbleContent(Context.time.minute + Context.minuteIncrease.add, Context.team.state, Context.interface.state, Context.role.role).length;",
                                                      "language" : "typescript"
                                                    },
                                                    "layout" : { },
                                                    "layoutClassName" : "clickable",
                                                    "layoutStyle" : {
                                                      "height" : "18px",
                                                      "padding" : "0",
                                                      "position" : "absolute",
                                                      "width" : "12px"
                                                    },
                                                    "localScriptEval" : {
                                                      "script" : {
                                                        "@class" : "ClientScript",
                                                        "content" : "const currentMinute = Context.time.minute + Context.minuteIncrease.add;\nContext.interface.setState(previousState => (\n  previousState.overlayShown.minute !== currentMinute || previousState.overlayShown.teamId !== Context.team.id || previousState.overlayShown.role !== Context.role.role ?\n  { ...previousState, overlayShown: { minute: (currentMinute), teamId: Context.team.id, role: Context.role.role } }\n  : { ...previousState, overlayShown: { minute: -1, teamId: -1, role: \"\" } }\n))",
                                                        "language" : "TypeScript"
                                                      }
                                                    },
                                                    "name" : "Clickable area",
                                                    "style" : { }
                                                  },
                                                  "type" : "FlexList"
                                                }, {
                                                  "props" : {
                                                    "children" : [ {
                                                      "props" : {
                                                        "children" : [ {
                                                          "props" : {
                                                            "children" : [ ],
                                                            "className" : "evacArrivalLine",
                                                            "layout" : { },
                                                            "layoutClassName" : "",
                                                            "layoutStyle" : {
                                                              "padding" : "0"
                                                            },
                                                            "name" : "Evac Arrival line",
                                                            "style" : { }
                                                          },
                                                          "type" : "FlexList"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evacArrNbr",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrHelicopterArrs;",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutClassName" : "evacArrNbrContainer",
                                                            "layoutStyle" : { },
                                                            "name" : "Nbr Helicopter Arrivals",
                                                            "style" : {
                                                              "color" : "green"
                                                            },
                                                            "text" : {
                                                              "@class" : "Script",
                                                              "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrHelicopterArrs);",
                                                              "language" : "TypeScript"
                                                            }
                                                          },
                                                          "type" : "Text"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evacArrNbr",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "!Context.interface.state.categories.Evacs||\n!Context.nbrEvacsArrs.state.nbrHelicopterEvacs;",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutClassName" : "evacArrNbrContainer",
                                                            "layoutStyle" : {
                                                              "margin-right" : "-2px",
                                                              "padding" : "0 0 0 2px"
                                                            },
                                                            "name" : "Nbr Helicopter Evacs",
                                                            "style" : {
                                                              "color" : "red"
                                                            },
                                                            "text" : {
                                                              "@class" : "Script",
                                                              "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrHelicopterEvacs);",
                                                              "language" : "TypeScript"
                                                            }
                                                          },
                                                          "type" : "Text"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evac",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "(!Context.interface.state.categories.VehicleArrivals || !Context.nbrEvacsArrs.state.nbrHelicopterArrs) && (!Context.interface.state.categories.Evacs || !Context.nbrEvacsArrs.state.nbrHelicopterEvacs);",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutStyle" : { },
                                                            "name" : "Helicopter icon",
                                                            "script" : {
                                                              "@class" : "Script",
                                                              "content" : "\"/pictosDashboard/Helicopter-cynthia-gc.png\"",
                                                              "language" : "TypeScript"
                                                            },
                                                            "style" : { }
                                                          },
                                                          "type" : "Image"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evacArrNbr",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrAmbulanceArrs;",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutClassName" : "evacArrNbrContainer",
                                                            "layoutStyle" : { },
                                                            "name" : "Nbr Ambulance Arrivals",
                                                            "style" : {
                                                              "color" : "green"
                                                            },
                                                            "text" : {
                                                              "@class" : "Script",
                                                              "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrAmbulanceArrs);",
                                                              "language" : "TypeScript"
                                                            }
                                                          },
                                                          "type" : "Text"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evacArrNbr",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "!Context.interface.state.categories.Evacs||\n!Context.nbrEvacsArrs.state.nbrAmbulanceEvacs;",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutClassName" : "evacArrNbrContainer",
                                                            "layoutStyle" : { },
                                                            "name" : "Nbr Ambulance Evacs",
                                                            "style" : {
                                                              "color" : "red"
                                                            },
                                                            "text" : {
                                                              "@class" : "Script",
                                                              "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs);",
                                                              "language" : "TypeScript"
                                                            }
                                                          },
                                                          "type" : "Text"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evac",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "(!Context.interface.state.categories.VehicleArrivals || !Context.nbrEvacsArrs.state.nbrAmbulanceArrs) && (!Context.interface.state.categories.Evacs || !Context.nbrEvacsArrs.state.nbrAmbulanceEvacs);",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutStyle" : { },
                                                            "name" : "Ambulance icon",
                                                            "script" : {
                                                              "@class" : "Script",
                                                              "content" : "\"/pictosDashboard/Ambulance-Odin_Wermeille.png\"",
                                                              "language" : "TypeScript"
                                                            },
                                                            "style" : { }
                                                          },
                                                          "type" : "Image"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evacArrNbr",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrSmurArrs;",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutClassName" : "evacArrNbrContainer",
                                                            "layoutStyle" : { },
                                                            "name" : "Nbr SMUR Arrivals",
                                                            "style" : {
                                                              "color" : "green"
                                                            },
                                                            "text" : {
                                                              "@class" : "Script",
                                                              "content" : "JSON.stringify(Context.nbrEvacsArrs.state.nbrSmurArrs);",
                                                              "language" : "TypeScript"
                                                            }
                                                          },
                                                          "type" : "Text"
                                                        }, {
                                                          "props" : {
                                                            "className" : "evac",
                                                            "hideIf" : {
                                                              "@class" : "Script",
                                                              "content" : "!Context.interface.state.categories.VehicleArrivals||\n!Context.nbrEvacsArrs.state.nbrSmurArrs;",
                                                              "language" : "typescript"
                                                            },
                                                            "layoutStyle" : { },
                                                            "name" : "SMUR icon",
                                                            "script" : {
                                                              "@class" : "Script",
                                                              "content" : "\"/pictosDashboard/Car-Andriy_Makukha.png\"",
                                                              "language" : "TypeScript"
                                                            },
                                                            "style" : { }
                                                          },
                                                          "type" : "Image"
                                                        } ],
                                                        "conditionnalClassNames" : [ {
                                                          "applyOn" : "Outside",
                                                          "className" : "oneVehicleType",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "(Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs || Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs || Context.nbrEvacsArrs.state.nbrHelicopterArrs)) + Number(!!Context.nbrEvacsArrs.state.nbrSmurArrs)) === 1;",
                                                            "language" : "typescript"
                                                          }
                                                        }, {
                                                          "applyOn" : "Outside",
                                                          "className" : "twoVehicleTypes",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "(Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs || Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs || Context.nbrEvacsArrs.state.nbrHelicopterArrs)) + Number(!!Context.nbrEvacsArrs.state.nbrSmurArrs)) === 2;",
                                                            "language" : "typescript"
                                                          }
                                                        }, {
                                                          "applyOn" : "Outside",
                                                          "className" : "threeVehicleTypes",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "(Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs || Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs || Context.nbrEvacsArrs.state.nbrHelicopterArrs)) + Number(!!Context.nbrEvacsArrs.state.nbrSmurArrs)) === 3;",
                                                            "language" : "typescript"
                                                          }
                                                        }, {
                                                          "applyOn" : "Outside",
                                                          "className" : "oneRepeat",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs && Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs && Context.nbrEvacsArrs.state.nbrHelicopterArrs)) === 1;",
                                                            "language" : "typescript"
                                                          }
                                                        }, {
                                                          "applyOn" : "Outside",
                                                          "className" : "twoRepeats",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "Number(!!(Context.nbrEvacsArrs.state.nbrAmbulanceEvacs && Context.nbrEvacsArrs.state.nbrAmbulanceArrs)) + Number(!!(Context.nbrEvacsArrs.state.nbrHelicopterEvacs && Context.nbrEvacsArrs.state.nbrHelicopterArrs)) === 2;",
                                                            "language" : "typescript"
                                                          }
                                                        }, {
                                                          "applyOn" : "Outside",
                                                          "className" : "upper",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "!((Context.time.minute + Context.minuteIncrease.add) % 2);",
                                                            "language" : "typescript"
                                                          }
                                                        }, {
                                                          "applyOn" : "Outside",
                                                          "className" : "lower",
                                                          "condition" : {
                                                            "@class" : "Script",
                                                            "content" : "!!((Context.time.minute + Context.minuteIncrease.add) % 2);",
                                                            "language" : "typescript"
                                                          }
                                                        } ],
                                                        "hideIf" : {
                                                          "@class" : "Script",
                                                          "content" : "(!Context.nbrEvacsArrs.state.nbrEvacs || !Context.interface.state.categories.Evacs) && (!Context.nbrEvacsArrs.state.nbrArrs || !Context.interface.state.categories.VehicleArrivals);",
                                                          "language" : "typescript"
                                                        },
                                                        "layout" : { },
                                                        "layoutClassName" : "evacArrivalContainer",
                                                        "layoutStyle" : {
                                                          "padding" : "0"
                                                        },
                                                        "name" : "Evac Arrival container",
                                                        "style" : {
                                                          "position" : "absolute"
                                                        }
                                                      },
                                                      "type" : "FlexList"
                                                    } ],
                                                    "exposeAs" : "nbrEvacsArrs",
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "!Context.interface.state.categories.Evacs&&\n!Context.interface.state.categories.VehicleArrivals;",
                                                      "language" : "typescript"
                                                    },
                                                    "id" : "",
                                                    "initialState" : {
                                                      "@class" : "Script",
                                                      "content" : "import { MainStateObject } from \"./game/common/simulationState/mainSimulationState\";\nimport { getCategorisedEvents, getOwnerRole, MainCategory } from \"./statistics/helpers\";\nconst categoriesEvacsArrOnly: { [Key in MainCategory]: boolean } = Object.fromEntries((Object.keys(Context.interface.state.categories) as MainCategory[]).map(key => [key, key === \"Evacs\" || key === \"VehicleArrivals\"])) as Record<MainCategory, boolean>;\nconst teamState: MainStateObject = Context.team.state;\nconst evacsArrsEvents = getCategorisedEvents(teamState, categoriesEvacsArrOnly);\n\nconst minuteEvacsArrs = evacsArrsEvents.map(evacsArrsList => {\n\n  return {\n    category: evacsArrsList.category, evacsArrs: evacsArrsList.events.filter(evacArr => {\n      const timeMatch = evacArr.startTime === Context.time.minute + Context.minuteIncrease.add;\n      const roleMatch = getOwnerRole(Context.team.state, evacArr.ownerId) === Context.role.role;\n      return timeMatch && roleMatch\n    })\n  };\n}).filter(evacsArrs => evacsArrs.evacsArrs.length);\n\nlet nbrAmbulanceEvacs = 0;\nlet nbrHelicopterEvacs = 0;\nlet nbrAmbulanceArrs = 0;\nlet nbrHelicopterArrs = 0;\nlet nbrSmurArrs = 0;\nminuteEvacsArrs.forEach(evacsArrs => {\n  nbrAmbulanceEvacs += evacsArrs.category === \"AmbulanceEvacs\" ? evacsArrs.evacsArrs.length : 0;\n  nbrHelicopterEvacs += evacsArrs.category === \"HelicopterEvacs\" ? evacsArrs.evacsArrs.length : 0;\n  nbrAmbulanceArrs += evacsArrs.category === \"AmbulanceArrivals\" ? evacsArrs.evacsArrs.length : 0;\n  nbrHelicopterArrs += evacsArrs.category === \"HelicopterArrivals\" ? evacsArrs.evacsArrs.length : 0;\n  nbrSmurArrs += evacsArrs.category === \"SmurArrivals\" ? evacsArrs.evacsArrs.length : 0;\n})\nconst nbrEvacs = nbrAmbulanceEvacs + nbrHelicopterEvacs;\nconst nbrArrs = nbrAmbulanceArrs + nbrHelicopterArrs + nbrSmurArrs;\nconst evacsData = {\n  nbrEvacs,\n  nbrArrs,\n  nbrAmbulanceEvacs,\n  nbrHelicopterEvacs,\n  nbrAmbulanceArrs,\n  nbrHelicopterArrs,\n  nbrSmurArrs\n};\nevacsData;",
                                                      "language" : "TypeScript"
                                                    },
                                                    "layoutStyle" : {
                                                      "padding" : "0"
                                                    },
                                                    "localState" : true,
                                                    "name" : "number of Evacs",
                                                    "style" : { }
                                                  },
                                                  "type" : "State"
                                                }, {
                                                  "props" : {
                                                    "className" : "beforeStart",
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getActorsPositions, Role } from \"./statistics/helpers\";\n(getActorsPositions(Context.team.state, [Context.role.role])[Context.role.role as Role].length && (Context.time.minute + Context.minuteIncrease.add) >= (getActorsPositions(Context.team.state, [Context.role.role])[Context.role.role as Role][0].time)) || (Context.team.state.simulationTimeSec / 60) < (Context.time.minute + Context.minuteIncrease.add);",
                                                      "language" : "typescript"
                                                    },
                                                    "layoutStyle" : {
                                                      "padding" : "0"
                                                    },
                                                    "name" : "No minute display before start",
                                                    "style" : { },
                                                    "text" : {
                                                      "@class" : "Script",
                                                      "content" : "import { createNoMinuteParallelogram } from \"./statistics/simpleGapMaker\";\ncreateNoMinuteParallelogram(Context.time.lastMinute, Context.team.state.simulationTimeSec / 60, Context.time.minute + Context.minuteIncrease.add, true, false)",
                                                      "language" : "TypeScript"
                                                    }
                                                  },
                                                  "type" : "Text"
                                                }, {
                                                  "props" : {
                                                    "className" : "beforeStart",
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getActorsPositions, Role } from \"./statistics/helpers\";\n(getActorsPositions(Context.team.state, [Context.role.role])[Context.role.role as Role].length && (Context.time.minute + Context.minuteIncrease.add) >= (getActorsPositions(Context.team.state, [Context.role.role])[Context.role.role as Role][0].time)) || (Context.team.state.simulationTimeSec / 60) < (Context.time.minute + Context.minuteIncrease.add);",
                                                      "language" : "typescript"
                                                    },
                                                    "layoutStyle" : {
                                                      "padding" : "0"
                                                    },
                                                    "name" : "No minute display before start",
                                                    "style" : { },
                                                    "text" : {
                                                      "@class" : "Script",
                                                      "content" : "import { createNoMinuteParallelogram } from \"./statistics/simpleGapMaker\";\ncreateNoMinuteParallelogram(Context.time.lastMinute, Context.team.state.simulationTimeSec / 60, Context.time.minute + Context.minuteIncrease.add, false, true);",
                                                      "language" : "TypeScript"
                                                    }
                                                  },
                                                  "type" : "Text"
                                                }, {
                                                  "props" : {
                                                    "className" : "",
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getActorsPositions, Role } from \"./statistics/helpers\";\n!((getActorsPositions(Context.team.state, [Context.role.role])[Context.role.role as Role].length && (Context.time.minute + Context.minuteIncrease.add) >= (getActorsPositions(Context.team.state, [Context.role.role])[Context.role.role as Role][0].time)) || (Context.team.state.simulationTimeSec / 60) < (Context.time.minute + Context.minuteIncrease.add));",
                                                      "language" : "typescript"
                                                    },
                                                    "layoutStyle" : {
                                                      "padding" : "0"
                                                    },
                                                    "name" : "Minute display",
                                                    "style" : { },
                                                    "text" : {
                                                      "@class" : "Script",
                                                      "content" : "import { createMinuteSquare } from \"./statistics/simpleGapMaker\";\ncreateMinuteSquare(Context.time, Context.minuteIncrease.add, Context.team.state, Context.interface.state, Context.role.role);",
                                                      "language" : "TypeScript"
                                                    }
                                                  },
                                                  "type" : "Text"
                                                } ],
                                                "hideIf" : {
                                                  "@class" : "Script",
                                                  "content" : "(Context.time.minute + Context.minuteIncrease.add) > Context.time.lastMinute;",
                                                  "language" : "typescript"
                                                },
                                                "layout" : { },
                                                "layoutStyle" : {
                                                  "padding" : "0"
                                                },
                                                "style" : { }
                                              },
                                              "type" : "FlexList"
                                            } ],
                                            "className" : "minutesContainer",
                                            "exposeAs" : "minuteIncrease",
                                            "getItemsFn" : {
                                              "@class" : "Script",
                                              "content" : "[{add : 0}, {add : 1}, {add : 2}, {add : 3}, {add : 4}]",
                                              "language" : "TypeScript"
                                            },
                                            "itemKey" : "add",
                                            "layout" : { },
                                            "layoutClassName" : "",
                                            "layoutStyle" : {
                                              "justify-content" : "space-between",
                                              "padding" : "0px",
                                              "width" : "100%"
                                            },
                                            "name" : "oneMinute",
                                            "style" : {
                                              "padding" : "0px",
                                              "width" : "100%"
                                            }
                                          },
                                          "type" : "For each"
                                        }, {
                                          "props" : {
                                            "children" : [ {
                                              "props" : {
                                                "children" : [ {
                                                  "props" : {
                                                    "children" : [ ],
                                                    "className" : "vline",
                                                    "conditionnalClassNames" : [ {
                                                      "applyOn" : "Inside",
                                                      "className" : "last",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { isLastRoleInLastTimeline } from \"./statistics/analysisDashboard\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\n  const teams : { id : number, name : string }[] = []\n  getTeamsContext().forEach(team => {\n  const state = getTeamState(team.id);\n  state && teams.push(team);\n});\nisLastRoleInLastTimeline(teams, Context.team.id, Context.interface.state.teamsUnfolded, Context.role);",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Inside",
                                                      "className" : "endOfNotLastTeam",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "false;",
                                                        "language" : "typescript"
                                                      }
                                                    }, {
                                                      "applyOn" : "Inside",
                                                      "className" : "endOfNotLastTeam",
                                                      "condition" : {
                                                        "@class" : "Script",
                                                        "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { isLastTimelineInNotLastTeam } from \"./statistics/analysisDashboard\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\n  const teams : { id : number, name : string }[] = []\ngetTeamsContext().forEach(team => {\n  const state = getTeamState(team.id);\n  state && teams.push(team);\n  })\nisLastTimelineInNotLastTeam(teams, Context.team.id, Context.interface.state.teamsUnfolded, Context.role);",
                                                        "language" : "typescript"
                                                      }
                                                    } ],
                                                    "layout" : {
                                                      "flexDirection" : "column"
                                                    },
                                                    "layoutStyle" : {
                                                      "padding" : "11.5px 20.5px 5px"
                                                    },
                                                    "name" : "Vertical line",
                                                    "style" : { }
                                                  },
                                                  "type" : "FlexList"
                                                }, {
                                                  "props" : {
                                                    "hideIf" : {
                                                      "@class" : "Script",
                                                      "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { isLastRoleInLastTimeline } from \"./statistics/analysisDashboard\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\n  const teams : { id : number, name : string }[] = []\n  getTeamsContext().forEach(team => {\n  const state = getTeamState(team.id);\n  state && teams.push(team);\n});\n!isLastRoleInLastTimeline(teams, Context.team.id, Context.interface.state.teamsUnfolded, Context.role);",
                                                      "language" : "typescript"
                                                    },
                                                    "layoutStyle" : {
                                                      "margin-top" : "20px",
                                                      "padding" : "0px"
                                                    },
                                                    "name" : "Time",
                                                    "style" : { },
                                                    "text" : {
                                                      "@class" : "Script",
                                                      "content" : "JSON.stringify(Context.time.minute) + \"'\"",
                                                      "language" : "TypeScript"
                                                    }
                                                  },
                                                  "type" : "Text"
                                                } ],
                                                "className" : "",
                                                "layout" : {
                                                  "alignItems" : "center",
                                                  "flexDirection" : "column",
                                                  "justifyContent" : "space-between"
                                                },
                                                "layoutStyle" : {
                                                  "padding" : "0px"
                                                },
                                                "name" : "Positionner",
                                                "style" : {
                                                  "margin-left" : "-19px",
                                                  "margin-right" : "-30px",
                                                  "padding" : "0px",
                                                  "width" : "100%"
                                                }
                                              },
                                              "type" : "FlexList"
                                            } ],
                                            "layout" : { },
                                            "layoutStyle" : {
                                              "padding" : "0px"
                                            },
                                            "name" : "Vertical line container",
                                            "style" : {
                                              "padding" : "0px"
                                            }
                                          },
                                          "type" : "FlexList"
                                        } ],
                                        "className" : "",
                                        "layout" : {
                                          "flexDirection" : "column"
                                        },
                                        "layoutClassName" : "",
                                        "layoutStyle" : {
                                          "padding" : "0px"
                                        },
                                        "style" : {
                                          "padding" : "0px"
                                        }
                                      },
                                      "type" : "FlexList"
                                    } ],
                                    "className" : "stayIn",
                                    "exposeAs" : "time",
                                    "getItemsFn" : {
                                      "@class" : "Script",
                                      "content" : "import { MainStateObject } from \"./game/common/simulationState/mainSimulationState\";\nimport { getTimeArray } from \"./statistics/helpers\";\nconst teamData : MainStateObject[] = Object.values(Context.state.state);\nconst timeArray = getTimeArray(Object.values(teamData));\ntimeArray;",
                                      "language" : "TypeScript"
                                    },
                                    "itemKey" : "minute",
                                    "layout" : { },
                                    "layoutStyle" : {
                                      "margin" : "-18px auto",
                                      "padding" : "0px",
                                      "width" : "100%"
                                    },
                                    "name" : "fiveMins",
                                    "style" : {
                                      "justify-content" : "space-between"
                                    }
                                  },
                                  "type" : "For each"
                                } ],
                                "className" : "stayIn",
                                "id" : "",
                                "layout" : {
                                  "flexDirection" : "column"
                                },
                                "layoutClassName" : "stayIn",
                                "layoutStyle" : {
                                  "padding" : "0"
                                },
                                "style" : { }
                              },
                              "type" : "FlexList"
                            } ],
                            "exposeAs" : "role",
                            "getItemsFn" : {
                              "@class" : "Script",
                              "content" : "  return[{role : \"AL\"}, {role : \"ACS\"}, {role : \"MCS\"}, {role : \"LEADPMA\"}, {role : \"EVASAN\"}]",
                              "language" : "TypeScript"
                            },
                            "hideIf" : {
                              "@class" : "Script",
                              "content" : "!Context.interface.state.teamsUnfolded[Context.team.id];",
                              "language" : "typescript"
                            },
                            "itemKey" : "role",
                            "layout" : {
                              "flexDirection" : "column"
                            },
                            "layoutStyle" : {
                              "padding" : "0"
                            },
                            "name" : "role",
                            "style" : {
                              "padding" : "0"
                            }
                          },
                          "type" : "For each"
                        } ],
                        "layout" : {
                          "flexDirection" : "column"
                        },
                        "layoutStyle" : {
                          "padding" : "0"
                        },
                        "style" : { }
                      },
                      "type" : "FlexList"
                    } ],
                    "className" : "stayIn",
                    "exposeAs" : "team",
                    "getItemsFn" : {
                      "@class" : "Script",
                      "content" : "import { getTeamsContext } from \"./dashboard/utils\";\nimport { MainStateObject } from \"./game/common/simulationState/mainSimulationState\";\nimport { getTeamState } from \"./statistics/teamDataWorkaround\";\nconst teams : {id : number, name : string, state : MainStateObject}[] = [];\ngetTeamsContext().forEach(team => {\n    const state = getTeamState(team.id);\n    state && teams.push({ id : team.id, name : team.name, state : state })\n});\nteams;",
                      "language" : "TypeScript"
                    },
                    "id" : "teamsContainer",
                    "itemKey" : "id",
                    "layout" : {
                      "flexDirection" : "column"
                    },
                    "layoutClassName" : "",
                    "layoutStyle" : {
                      "margin" : "0",
                      "padding" : "10px"
                    },
                    "name" : "team",
                    "style" : { }
                  },
                  "type" : "For each"
                } ],
                "exposeAs" : "interface",
                "id" : "categories",
                "initialState" : {
                  "@class" : "Script",
                  "content" : "import { createDashboardState } from \"./statistics/analysisDashboard\";\n(createDashboardState());",
                  "language" : "TypeScript"
                },
                "layoutStyle" : {
                  "align-items" : "center",
                  "flex-direction" : "column",
                  "padding" : "0px",
                  "width" : "100%"
                },
                "localState" : true,
                "name" : "interface",
                "style" : { }
              },
              "type" : "State"
            } ],
            "className" : "",
            "id" : "",
            "layout" : {
              "flexDirection" : "column"
            },
            "layoutClassName" : "stayIn",
            "layoutStyle" : { },
            "style" : {
              "width" : "100%"
            }
          },
          "type" : "FlexList"
        } ],
        "className" : "",
        "exposeAs" : "state",
        "initialState" : {
          "@class" : "Script",
          "content" : "({});",
          "language" : "TypeScript"
        },
        "layoutClassName" : "stayIn noPadding",
        "layoutStyle" : {
          "width" : "100%"
        },
        "localState" : true,
        "name" : "State",
        "style" : { }
      },
      "type" : "State"
    } ],
    "className" : "stayIn",
    "layout" : {
      "flexDirection" : "column"
    },
    "layoutStyle" : {
      "height" : "100%",
      "width" : "100%"
    },
    "style" : { }
  },
  "type" : "FlexList"
}